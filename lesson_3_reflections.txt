

When would you want to use a remote repository rather than keeping all your work local? When you are collaborating with others. When you want to ensure you have a backup.

'git pull origin master' pulling files from remote: the remote I am pulling from;  the branch I want to pull (master branch on remote)

'git push origin master' pushing files to remote: the remote I want to send changes to; the name of the local branch I'd like to push.

'git remote -v' - remote but with additional information, including the URL). V stands for verbose.

'git add origin git@githubURL....' to add the repository (URL) on GitHub as a remote (origin is the name I'll use in this repository to refer to the repository on GitHub.)

'git remote' - Shows you all the current remotes. Allows you to view and create remotes (on GitHub)

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?  By pulling changes manually, you can control when you consolidate changes into groups before pulling them, otherwise it would result in too many commits.

a fork is just a clone that GitHub makes for you on their own machines; forks all link back to the original.

'git clone git@githubURL....' clones that repository to my own computer. Also, git automatically sets up a remote pointing to the GitHub repository you cloned from.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
FORK - is a kind of "clone" within GitHub itself. Allows you to "clone" a repository created by someone else, even if you don't have permission to edit their repository.
CLONE- copy within your local machine, or from GitHub to your local machine.
BRANCH - a new extension of an existing project, connects back to parent.







